# This file was automatically generated, do not edit.
# Edit file ci/bin/main.ml instead.

stages:
- images
- sanity
- build
- test
- packaging
- doc
- manual

oc.docker:ci:amd64:
  image: ${GCP_REGISTRY}/tezos/docker-images/ci-docker:v1.12.0
  stage: images
  tags:
  - gcp
  dependencies: []
  before_script: []
  script:
  - ./images/ci_create_ci_images.sh
  services:
  - docker:${DOCKER_VERSION}-dind
  variables:
    DOCKER_VERSION: 24.0.6
    CI_DOCKER_HUB: "false"
    ARCH: amd64
  artifacts:
    reports:
      dotenv: ci_image_tag.env

oc.docker:client-libs-dependencies:
  image: ${GCP_REGISTRY}/tezos/docker-images/ci-docker:v1.12.0
  stage: build
  tags:
  - gcp
  dependencies: []
  before_script: []
  script:
  - ./scripts/ci/docker_client_libs_dependencies_build.sh
  services:
  - docker:${DOCKER_VERSION}-dind
  variables:
    DOCKER_VERSION: 24.0.6
    CI_DOCKER_HUB: "false"
  artifacts:
    reports:
      dotenv: client_libs_dependencies_image_tag.env

oc.docker:rust-toolchain:amd64:
  image: ${GCP_REGISTRY}/tezos/docker-images/ci-docker:v1.12.0
  stage: images
  tags:
  - gcp
  dependencies: []
  before_script: []
  script:
  - ./scripts/ci/docker_rust_toolchain_build.sh
  services:
  - docker:${DOCKER_VERSION}-dind
  variables:
    DOCKER_VERSION: 24.0.6
    CI_DOCKER_HUB: "false"
  artifacts:
    reports:
      dotenv: rust_toolchain_image_tag.env

oc.docker:ci:arm64:
  image: ${GCP_REGISTRY}/tezos/docker-images/ci-docker:v1.12.0
  stage: images
  tags:
  - gcp_arm64
  dependencies: []
  before_script: []
  script:
  - ./images/ci_create_ci_images.sh
  services:
  - docker:${DOCKER_VERSION}-dind
  variables:
    DOCKER_VERSION: 24.0.6
    CI_DOCKER_HUB: "false"
    ARCH: arm64
  artifacts:
    reports:
      dotenv: ci_image_tag.env

sanity_ci:
  image: ${ci_image_name}/runtime-build-dependencies:${ci_image_tag}
  stage: sanity
  tags:
  - gcp
  dependencies:
  - oc.docker:ci:amd64
  before_script:
  - ./scripts/ci/take_ownership.sh
  - eval $(opam env)
  script:
  - make -C manifest check
  - ./scripts/lint.sh --check-gitlab-ci-yml
  - ./scripts/ci/check_alpine_version.sh
  - make -C ci check

docker:hadolint-schedule_extended_test:
  image: hadolint/hadolint:2.9.3-debian
  stage: sanity
  tags:
  - gcp
  rules:
  - when: always
  dependencies: []
  script:
  - hadolint build.Dockerfile
  - hadolint Dockerfile

oc.build_arm64-released:
  image: ${ci_image_name}/runtime-build-dependencies:${ci_image_tag}
  stage: build
  tags:
  - gcp_arm64
  rules:
  - when: always
  dependencies:
  - oc.docker:ci:arm64
  cache:
    key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - ./scripts/ci/take_ownership.sh
  - . ./scripts/version.sh
  - eval $(opam env)
  script:
  - ./scripts/ci/build_full_unreleased.sh
  variables:
    ARCH: arm64
    EXECUTABLE_FILES: script-inputs/released-executables
    CARGO_NET_OFFLINE: "false"
  artifacts:
    name: build-$ARCH-$CI_COMMIT_REF_SLUG
    expire_in: 1 day
    paths:
    - octez-*
    - src/proto_*/parameters/*.json
    - _build/default/src/lib_protocol_compiler/bin/main_native.exe
    - _build/default/tezt/tests/main.exe
    - _build/default/contrib/octez_injector_server/octez_injector_server.exe
    when: on_success

oc.build_arm64-exp-dev-extra:
  image: ${ci_image_name}/runtime-build-dependencies:${ci_image_tag}
  stage: build
  tags:
  - gcp_arm64
  rules:
  - when: always
  dependencies:
  - oc.docker:ci:arm64
  cache:
    key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - ./scripts/ci/take_ownership.sh
  - . ./scripts/version.sh
  - eval $(opam env)
  script:
  - ./scripts/ci/build_full_unreleased.sh
  variables:
    ARCH: arm64
    EXECUTABLE_FILES: script-inputs/experimental-executables script-inputs/dev-executables
    BUILD_EXTRA: src/bin_tps_evaluation/main_tps_evaluation.exe src/bin_octogram/octogram_main.exe
      tezt/tests/main.exe
    CARGO_NET_OFFLINE: "false"
  artifacts:
    name: build-$ARCH-$CI_COMMIT_REF_SLUG
    expire_in: 1 day
    paths:
    - octez-*
    - src/proto_*/parameters/*.json
    - _build/default/src/lib_protocol_compiler/bin/main_native.exe
    - _build/default/tezt/tests/main.exe
    - _build/default/contrib/octez_injector_server/octez_injector_server.exe
    when: on_success

oc.build:static-x86_64-linux-binaries:
  image: ${ci_image_name}/runtime-build-dependencies:${ci_image_tag}
  stage: build
  tags:
  - gcp
  rules:
  - when: always
  dependencies:
  - oc.docker:ci:amd64
  cache:
    key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - ./scripts/ci/take_ownership.sh
  - eval $(opam env)
  script:
  - ./scripts/ci/build_static_binaries.sh
  variables:
    ARCH: x86_64
    EXECUTABLE_FILES: script-inputs/released-executables script-inputs/experimental-executables
    CARGO_NET_OFFLINE: "false"
  artifacts:
    paths:
    - octez-binaries/$ARCH/*

oc.build_x86_64-released:
  image: ${ci_image_name}/runtime-build-dependencies:${ci_image_tag}
  stage: build
  tags:
  - gcp
  rules:
  - when: always
  dependencies:
  - oc.docker:ci:amd64
  cache:
    key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - ./scripts/ci/take_ownership.sh
  - . ./scripts/version.sh
  - eval $(opam env)
  script:
  - ./scripts/ci/build_full_unreleased.sh
  variables:
    ARCH: x86_64
    EXECUTABLE_FILES: script-inputs/released-executables
    CARGO_NET_OFFLINE: "false"
    COVERAGE_OPTIONS: --instrument-with bisect_ppx
  artifacts:
    name: build-$ARCH-$CI_COMMIT_REF_SLUG
    expire_in: 1 day
    paths:
    - octez-*
    - src/proto_*/parameters/*.json
    - _build/default/src/lib_protocol_compiler/bin/main_native.exe
    - _build/default/tezt/tests/main.exe
    - _build/default/contrib/octez_injector_server/octez_injector_server.exe
    when: on_success

oc.build_x86_64-exp-dev-extra:
  image: ${ci_image_name}/runtime-build-dependencies:${ci_image_tag}
  stage: build
  tags:
  - gcp
  rules:
  - when: always
  dependencies:
  - oc.docker:ci:amd64
  cache:
    key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - ./scripts/ci/take_ownership.sh
  - . ./scripts/version.sh
  - eval $(opam env)
  script:
  - ./scripts/ci/build_full_unreleased.sh
  variables:
    ARCH: x86_64
    EXECUTABLE_FILES: script-inputs/experimental-executables script-inputs/dev-executables
    BUILD_EXTRA: src/bin_tps_evaluation/main_tps_evaluation.exe src/bin_octogram/octogram_main.exe
      tezt/tests/main.exe contrib/octez_injector_server/octez_injector_server.exe
    CARGO_NET_OFFLINE: "false"
    COVERAGE_OPTIONS: --instrument-with bisect_ppx
  artifacts:
    name: build-$ARCH-$CI_COMMIT_REF_SLUG
    expire_in: 1 day
    paths:
    - octez-*
    - src/proto_*/parameters/*.json
    - _build/default/src/lib_protocol_compiler/bin/main_native.exe
    - _build/default/tezt/tests/main.exe
    - _build/default/contrib/octez_injector_server/octez_injector_server.exe
    when: on_success

ocaml-check:
  image: ${ci_image_name}/runtime-build-dependencies:${ci_image_tag}
  stage: build
  tags:
  - gcp
  rules:
  - when: always
  dependencies:
  - oc.docker:ci:amd64
  cache:
    key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - ./scripts/ci/take_ownership.sh
  - . ./scripts/version.sh
  - eval $(opam env)
  script:
  - dune build @check
  variables:
    CARGO_NET_OFFLINE: "false"

oc.build_kernels:
  image: ${rust_toolchain_image_name}:${rust_toolchain_image_tag}
  stage: build
  tags:
  - gcp
  rules:
  - when: on_success
  dependencies:
  - oc.docker:rust-toolchain:amd64
  cache:
  - key: kernels-sccache
    paths:
    - $CI_PROJECT_DIR/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - . ./scripts/ci/sccache-start.sh
  script:
  - make -f kernels.mk build
  - make -f etherlink.mk evm_kernel.wasm
  - make -C src/riscv riscv-sandbox riscv-dummy.elf
  - make -C src/riscv/tests/ build
  after_script:
  - sccache --stop-server || true
  variables:
    CC: clang
    NATIVE_TARGET: x86_64-unknown-linux-musl
    SCCACHE_DIR: $CI_PROJECT_DIR/_sccache
    RUSTC_WRAPPER: sccache
    CARGO_NET_OFFLINE: "false"
  artifacts:
    name: build-kernels-$CI_COMMIT_REF_SLUG
    expire_in: 1 day
    paths:
    - evm_kernel.wasm
    - smart-rollup-installer
    - sequenced_kernel.wasm
    - tx_kernel.wasm
    - tx_kernel_dal.wasm
    - dal_echo_kernel.wasm
    - src/riscv/riscv-sandbox
    - src/riscv/riscv-dummy.elf
    - src/riscv/tests/inline_asm/rv64-inline-asm-tests
    when: on_success

oc.tezt:fetch-records:
  image: ${ci_image_name}/runtime-build-dependencies:${ci_image_tag}
  stage: build
  tags:
  - gcp
  rules:
  - when: always
  dependencies:
  - oc.docker:ci:amd64
  allow_failure: true
  before_script:
  - ./scripts/ci/take_ownership.sh
  - . ./scripts/version.sh
  - eval $(opam env)
  script:
  - dune exec scripts/ci/update_records/update.exe -- --log-file tezt-fetch-records.log
    --from last-successful-schedule-extended-test --info
  after_script:
  - ./scripts/ci/filter_corrupted_records.sh
  artifacts:
    expire_in: 4 hours
    paths:
    - tezt-fetch-records.log
    - tezt/records/*.json
    - tezt/records/*.json.broken
    when: always

select_tezts:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: build
  tags:
  - gcp
  dependencies:
  - oc.docker:ci:amd64
  allow_failure:
    exit_codes: 17
  before_script:
  - ./scripts/ci/take_ownership.sh
  - eval $(opam env)
  script:
  - scripts/ci/select_tezts.sh || exit $?
  artifacts:
    expire_in: 3 days
    paths:
    - selected_tezts.tsl
    when: always

build_octez_source:
  image: ${ci_image_name}/runtime-build-dependencies:${ci_image_tag}
  stage: build
  tags:
  - gcp
  rules:
  - when: always
  dependencies:
  - oc.docker:ci:amd64
  cache:
    key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - ./scripts/ci/take_ownership.sh
  - . ./scripts/version.sh
  - eval $(opam env)
  script:
  - ./scripts/ci/restrict_export_to_octez_source.sh
  - ./scripts/ci/create_octez_tarball.sh octez
  - mv octez.tar.bz2 ../
  - cd ../
  - tar xf octez.tar.bz2
  - cd octez/
  - eval $(opam env)
  - make octez
  variables:
    CARGO_NET_OFFLINE: "false"

oc.build:dpkg:amd64:
  image: $DISTRIBUTION
  stage: build
  tags:
  - gcp
  needs: []
  dependencies: []
  before_script:
  - . ./scripts/version.sh
  - ./scripts/ci/bin_packages_deb_dependencies.sh
  script:
  - wget https://sh.rustup.rs/rustup-init.sh
  - chmod +x rustup-init.sh
  - ./rustup-init.sh --profile minimal --default-toolchain  $recommended_rust_version
    -y
  - . $HOME/.cargo/env
  - export OPAMYES="true"
  - opam init --bare --disable-sandboxing
  - make build-deps
  - eval $(opam env)
  - make $TARGET
  - DISTRO=$(echo "$DISTRIBUTION" | cut -d':' -f1)
  - RELEASE=$(echo "$DISTRIBUTION" | cut -d':' -f2)
  - mkdir -p packages/$DISTRO/$RELEASE
  - mv octez-*.* packages/$DISTRO/$RELEASE/
  variables:
    TARGET: dpkg
    OCTEZ_PKGMAINTAINER: nomadic-labs
    BLST_PORTABLE: "yes"
    ARCH: amd64
    CARGO_HOME: /root/.cargo
    CARGO_NET_OFFLINE: "false"
  artifacts:
    name: ${TARGET}-$ARCH-$CI_COMMIT_REF_SLUG
    expire_in: 1 day
    paths:
    - packages/
    when: on_success
  parallel:
    matrix:
    - DISTRIBUTION:
      - debian:bookworm
      - ubuntu:focal
      - ubuntu:jammy

oc.build:rpm:amd64:
  image: $DISTRIBUTION
  stage: build
  tags:
  - gcp
  needs: []
  dependencies: []
  before_script:
  - . ./scripts/version.sh
  - ./scripts/ci/bin_packages_rpm_dependencies.sh
  script:
  - wget https://sh.rustup.rs/rustup-init.sh
  - chmod +x rustup-init.sh
  - ./rustup-init.sh --profile minimal --default-toolchain  $recommended_rust_version
    -y
  - . $HOME/.cargo/env
  - export OPAMYES="true"
  - opam init --bare --disable-sandboxing
  - make build-deps
  - eval $(opam env)
  - make $TARGET
  - DISTRO=$(echo "$DISTRIBUTION" | cut -d':' -f1)
  - RELEASE=$(echo "$DISTRIBUTION" | cut -d':' -f2)
  - mkdir -p packages/$DISTRO/$RELEASE
  - mv octez-*.* packages/$DISTRO/$RELEASE/
  variables:
    TARGET: rpm
    OCTEZ_PKGMAINTAINER: nomadic-labs
    BLST_PORTABLE: "yes"
    ARCH: amd64
    CARGO_HOME: /root/.cargo
    CARGO_NET_OFFLINE: "false"
  artifacts:
    name: ${TARGET}-$ARCH-$CI_COMMIT_REF_SLUG
    expire_in: 1 day
    paths:
    - packages/
    when: on_success
  parallel:
    matrix:
    - DISTRIBUTION:
      - fedora:39
      - rockylinux:9.3

opam:prepare:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 1 minute
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 1 minute
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: delayed
    start_in: 1 minute
  dependencies:
  - oc.docker:ci:amd64
  before_script:
  - eval $(opam env)
  script:
  - git init _opam-repo-for-release
  - ./scripts/opam-prepare-repo.sh dev ./ ./_opam-repo-for-release
  - git -C _opam-repo-for-release add packages
  - git -C _opam-repo-for-release commit -m "tezos packages"
  artifacts:
    paths:
    - _opam-repo-for-release/

opam:bls12-381:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 7 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 7 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 7 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: bls12-381
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:octez-accuser-Proxford:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 1 minute
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 1 minute
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: delayed
    start_in: 1 minute
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: octez-accuser-Proxford
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:octez-accuser-PtParisB:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 1 minute
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 1 minute
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: delayed
    start_in: 1 minute
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: octez-accuser-PtParisB
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:octez-alcotezt:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 7 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 7 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 7 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: octez-alcotezt
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:octez-baker-Proxford:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 1 minute
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 1 minute
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: delayed
    start_in: 1 minute
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: octez-baker-Proxford
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:octez-baker-PtParisB:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 1 minute
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 1 minute
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: delayed
    start_in: 1 minute
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: octez-baker-PtParisB
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:octez-client:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 1 minute
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 1 minute
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: delayed
    start_in: 1 minute
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: octez-client
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:octez-codec:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 1 minute
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 1 minute
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: delayed
    start_in: 1 minute
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: octez-codec
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:octez-crawler:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 4 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 4 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 4 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: octez-crawler
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:octez-dac-client:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 1 minute
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 1 minute
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: delayed
    start_in: 1 minute
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: octez-dac-client
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:octez-dac-node:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 1 minute
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 1 minute
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: delayed
    start_in: 1 minute
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: octez-dac-node
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:octez-dal-node:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 1 minute
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 1 minute
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: delayed
    start_in: 1 minute
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: octez-dal-node
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:octez-distributed-internal:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 7 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 7 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 7 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: octez-distributed-internal
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:octez-distributed-lwt-internal:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 7 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 7 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 7 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: octez-distributed-lwt-internal
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:octez-evm-node:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 1 minute
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 1 minute
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: delayed
    start_in: 1 minute
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: octez-evm-node
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:octez-evm-node-libs:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 1 minute
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 1 minute
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 1 minute
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: octez-evm-node-libs
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:octez-injector:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 2 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 2 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 2 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: octez-injector
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:octez-internal-libs:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 7 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 7 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 7 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: octez-internal-libs
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:octez-l2-libs:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 6 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 6 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 6 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: octez-l2-libs
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:octez-libs:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 7 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 7 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 7 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: octez-libs
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:octez-node:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 1 minute
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 1 minute
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: delayed
    start_in: 1 minute
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: octez-node
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:octez-node-config:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 4 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 4 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 4 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: octez-node-config
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:octez-proto-libs:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 6 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 6 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 6 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: octez-proto-libs
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:octez-protocol-000-Ps9mPmXa-libs:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 2 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 2 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 2 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: octez-protocol-000-Ps9mPmXa-libs
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:octez-protocol-001-PtCJ7pwo-libs:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 2 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 2 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 2 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: octez-protocol-001-PtCJ7pwo-libs
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:octez-protocol-002-PsYLVpVv-libs:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 3 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 3 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 3 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: octez-protocol-002-PsYLVpVv-libs
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:octez-protocol-003-PsddFKi3-libs:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 3 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 3 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 3 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: octez-protocol-003-PsddFKi3-libs
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:octez-protocol-004-Pt24m4xi-libs:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 3 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 3 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 3 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: octez-protocol-004-Pt24m4xi-libs
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:octez-protocol-005-PsBabyM1-libs:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 3 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 3 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 3 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: octez-protocol-005-PsBabyM1-libs
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:octez-protocol-006-PsCARTHA-libs:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 3 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 3 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 3 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: octez-protocol-006-PsCARTHA-libs
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:octez-protocol-007-PsDELPH1-libs:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 3 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 3 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 3 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: octez-protocol-007-PsDELPH1-libs
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:octez-protocol-008-PtEdo2Zk-libs:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 3 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 3 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 3 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: octez-protocol-008-PtEdo2Zk-libs
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:octez-protocol-009-PsFLoren-libs:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 3 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 3 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 3 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: octez-protocol-009-PsFLoren-libs
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:octez-protocol-010-PtGRANAD-libs:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 3 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 3 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 3 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: octez-protocol-010-PtGRANAD-libs
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:octez-protocol-011-PtHangz2-libs:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 3 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 3 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 3 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: octez-protocol-011-PtHangz2-libs
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:octez-protocol-012-Psithaca-libs:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 3 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 3 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 3 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: octez-protocol-012-Psithaca-libs
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:octez-protocol-013-PtJakart-libs:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 3 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 3 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 3 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: octez-protocol-013-PtJakart-libs
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:octez-protocol-014-PtKathma-libs:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 3 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 3 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 3 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: octez-protocol-014-PtKathma-libs
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:octez-protocol-015-PtLimaPt-libs:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 3 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 3 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 3 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: octez-protocol-015-PtLimaPt-libs
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:octez-protocol-016-PtMumbai-libs:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 2 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 2 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 2 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: octez-protocol-016-PtMumbai-libs
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:octez-protocol-017-PtNairob-libs:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 2 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 2 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 2 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: octez-protocol-017-PtNairob-libs
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:octez-protocol-018-Proxford-libs:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 2 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 2 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 2 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: octez-protocol-018-Proxford-libs
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:octez-protocol-019-PtParisB-libs:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 2 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 2 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 2 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: octez-protocol-019-PtParisB-libs
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:octez-protocol-alpha-libs:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 2 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 2 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 2 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: octez-protocol-alpha-libs
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:octez-protocol-compiler:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 6 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 6 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: delayed
    start_in: 6 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: octez-protocol-compiler
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:octez-proxy-server:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 1 minute
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 1 minute
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: delayed
    start_in: 1 minute
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: octez-proxy-server
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:octez-riscv-api:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 7 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 7 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 7 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: octez-riscv-api
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:octez-riscv-pvm:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 6 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 6 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 6 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: octez-riscv-pvm
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:octez-rpc-process:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 3 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 3 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 3 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: octez-rpc-process
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:octez-rust-deps:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 7 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 7 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 7 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: octez-rust-deps
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:octez-shell-libs:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 6 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 6 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 6 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: octez-shell-libs
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:octez-signer:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 4 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 4 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: delayed
    start_in: 4 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: octez-signer
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:octez-smart-rollup-node:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 1 minute
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 1 minute
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: delayed
    start_in: 1 minute
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: octez-smart-rollup-node
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:octez-smart-rollup-node-Proxford:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 2 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 2 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 2 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: octez-smart-rollup-node-Proxford
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:octez-smart-rollup-node-PtNairob:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 2 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 2 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 2 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: octez-smart-rollup-node-PtNairob
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:octez-smart-rollup-node-PtParisB:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 2 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 2 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 2 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: octez-smart-rollup-node-PtParisB
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:octez-smart-rollup-node-alpha:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 2 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 2 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 2 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: octez-smart-rollup-node-alpha
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:octez-smart-rollup-node-lib:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 2 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 2 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 2 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: octez-smart-rollup-node-lib
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:octez-smart-rollup-wasm-debugger:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 1 minute
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 1 minute
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: delayed
    start_in: 1 minute
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: octez-smart-rollup-wasm-debugger
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:octez-smart-rollup-wasm-debugger-lib:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 2 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 2 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 2 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: octez-smart-rollup-wasm-debugger-lib
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:octez-smart-rollup-wasm-debugger-plugin:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 7 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 7 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 7 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: octez-smart-rollup-wasm-debugger-plugin
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:octez-version:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 6 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 6 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: delayed
    start_in: 6 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: octez-version
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:tezos-benchmark:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 6 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 6 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 6 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: tezos-benchmark
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:tezos-client-demo-counter:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 4 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 4 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 4 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: tezos-client-demo-counter
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:tezos-client-genesis:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 4 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 4 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 4 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: tezos-client-genesis
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:tezos-dac-client-lib:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 4 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 4 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 4 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: tezos-dac-client-lib
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:tezos-dac-lib:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 4 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 4 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 4 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: tezos-dac-lib
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:tezos-dac-node-lib:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 2 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 2 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 2 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: tezos-dac-node-lib
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:tezos-dal-node-lib:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 4 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 4 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 4 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: tezos-dal-node-lib
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:tezos-dal-node-services:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 6 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 6 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 6 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: tezos-dal-node-services
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:tezos-openapi:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 6 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 6 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 6 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: tezos-openapi
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:tezos-protocol-000-Ps9mPmXa:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 4 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 4 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 4 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: tezos-protocol-000-Ps9mPmXa
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:tezos-protocol-001-PtCJ7pwo:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 4 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 4 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 4 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: tezos-protocol-001-PtCJ7pwo
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:tezos-protocol-002-PsYLVpVv:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 4 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 4 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 4 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: tezos-protocol-002-PsYLVpVv
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:tezos-protocol-003-PsddFKi3:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 4 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 4 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 4 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: tezos-protocol-003-PsddFKi3
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:tezos-protocol-004-Pt24m4xi:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 4 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 4 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 4 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: tezos-protocol-004-Pt24m4xi
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:tezos-protocol-005-PsBABY5H:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 4 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 4 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 4 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: tezos-protocol-005-PsBABY5H
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:tezos-protocol-005-PsBabyM1:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 4 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 4 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 4 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: tezos-protocol-005-PsBabyM1
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:tezos-protocol-006-PsCARTHA:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 5 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 5 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 5 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: tezos-protocol-006-PsCARTHA
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:tezos-protocol-007-PsDELPH1:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 5 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 5 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 5 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: tezos-protocol-007-PsDELPH1
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:tezos-protocol-008-PtEdo2Zk:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 5 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 5 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 5 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: tezos-protocol-008-PtEdo2Zk
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:tezos-protocol-008-PtEdoTez:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 5 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 5 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 5 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: tezos-protocol-008-PtEdoTez
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:tezos-protocol-009-PsFLoren:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 5 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 5 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 5 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: tezos-protocol-009-PsFLoren
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:tezos-protocol-010-PtGRANAD:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 5 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 5 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 5 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: tezos-protocol-010-PtGRANAD
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:tezos-protocol-011-PtHangz2:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 5 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 5 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 5 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: tezos-protocol-011-PtHangz2
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:tezos-protocol-012-Psithaca:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 5 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 5 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 5 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: tezos-protocol-012-Psithaca
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:tezos-protocol-013-PtJakart:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 5 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 5 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 5 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: tezos-protocol-013-PtJakart
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:tezos-protocol-014-PtKathma:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 5 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 5 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 5 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: tezos-protocol-014-PtKathma
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:tezos-protocol-015-PtLimaPt:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 5 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 5 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 5 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: tezos-protocol-015-PtLimaPt
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:tezos-protocol-016-PtMumbai:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 5 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 5 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 5 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: tezos-protocol-016-PtMumbai
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:tezos-protocol-017-PtNairob:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 5 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 5 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 5 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: tezos-protocol-017-PtNairob
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:tezos-protocol-018-Proxford:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 5 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 5 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 5 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: tezos-protocol-018-Proxford
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:tezos-protocol-019-PtParisB:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 5 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 5 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 5 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: tezos-protocol-019-PtParisB
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:tezos-protocol-alpha:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 6 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 6 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 6 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: tezos-protocol-alpha
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:tezos-protocol-demo-counter:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 6 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 6 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 6 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: tezos-protocol-demo-counter
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:tezos-protocol-demo-noops:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 6 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 6 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 6 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: tezos-protocol-demo-noops
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:tezos-protocol-genesis:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 6 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 6 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 6 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: tezos-protocol-genesis
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:tezos-proxy-server-config:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 6 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 6 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 6 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: tezos-proxy-server-config
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:tezt-tezos:
  image: ${ci_image_name}/runtime-prebuild-dependencies:${ci_image_tag}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 6 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 6 minutes
  - changes:
    - '**/*.dune.inc'
    - '**/*.opam'
    - '**/dune'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/dune.inc'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/**/*.ml*
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($GITLAB_USER_LOGIN == "nomadic-margebot"
      || $CI_MERGE_REQUEST_ASSIGNEES =~ /nomadic-margebot/ || $CI_MERGE_REQUEST_EVENT_TYPE
      == "merge_train")
    when: delayed
    start_in: 6 minutes
  needs:
  - oc.docker:ci:amd64
  - opam:prepare
  dependencies:
  - oc.docker:ci:amd64
  - opam:prepare
  cache:
  - key: opam-sccache
    paths:
    - $CI_PROJECT_DIR/_build/_sccache
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  - sccache --stop-server || true
  variables:
    RUNTEZTALIAS: "true"
    package: tezt-tezos
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

kaitai_checks:
  image: ${ci_image_name}/runtime-build-dependencies:${ci_image_tag}
  stage: test
  tags:
  - gcp
  rules:
  - when: always
  dependencies:
  - oc.docker:ci:amd64
  cache:
    key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - . ./scripts/version.sh
  - eval $(opam env)
  script:
  - make -C ${CI_PROJECT_DIR} check-kaitai-struct-files || (echo 'Octez encodings
    and Kaitai files seem to be out of sync. You might need to run `make check-kaitai-struct-files`
    and commit the resulting diff.' ; false)
  variables:
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 hour
    paths:
    - _build/default/client-libs/bin_codec_kaitai/codec.exe
    when: on_success

kaitai_e2e_checks:
  image: ${client_libs_dependencies_image_name}:${client_libs_dependencies_image_tag}
  stage: test
  tags:
  - gcp
  rules:
  - when: on_success
  needs:
  - oc.docker:client-libs-dependencies
  - kaitai_checks
  dependencies:
  - oc.docker:client-libs-dependencies
  - kaitai_checks
  before_script:
  - . ./scripts/version.sh
  - . ./scripts/install_build_deps.js.sh
  script:
  - ./client-libs/kaitai-struct-files/scripts/kaitai_e2e.sh client-libs/kaitai-struct-files/files
    2>/dev/null

oc.check_lift_limits_patch:
  image: ${ci_image_name}/runtime-build-dependencies:${ci_image_tag}
  stage: test
  tags:
  - gcp
  rules:
  - when: always
  dependencies:
  - oc.docker:ci:amd64
  cache:
    key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - . ./scripts/version.sh
  - eval $(opam env)
  script:
  - '[ $(git apply --numstat src/bin_tps_evaluation/lift_limits.patch | cut -f3) =
    "src/proto_alpha/lib_protocol/main.ml" ]'
  - git apply src/bin_tps_evaluation/lift_limits.patch
  - dune build @src/proto_alpha/lib_protocol/check
  variables:
    CARGO_NET_OFFLINE: "false"

oc.misc_checks:
  image: ${ci_image_name}/runtime-build-test-dependencies:${ci_image_tag}
  stage: test
  tags:
  - gcp
  rules:
  - when: always
  dependencies:
  - oc.docker:ci:amd64
  before_script:
  - ./scripts/ci/take_ownership.sh
  - . ./scripts/version.sh
  - eval $(opam env)
  - . $HOME/.venv/bin/activate
  script:
  - ./scripts/ci/lint_misc_check.sh
  - scripts/check_wasm_pvm_regressions.sh check
  - etherlink/scripts/check_evm_store_migrations.sh check

oc.python_check:
  image: ${ci_image_name}/runtime-build-test-dependencies:${ci_image_tag}
  stage: test
  tags:
  - gcp
  rules:
  - when: always
  dependencies:
  - oc.docker:ci:amd64
  before_script:
  - ./scripts/ci/take_ownership.sh
  - . ./scripts/version.sh
  - . $HOME/.venv/bin/activate
  script:
  - ./scripts/ci/lint_misc_python_check.sh

oc.ocaml_fmt:
  image: ${ci_image_name}/runtime-build-dependencies:${ci_image_tag}
  stage: test
  tags:
  - gcp
  rules:
  - when: always
  dependencies:
  - oc.docker:ci:amd64
  before_script:
  - ./scripts/ci/take_ownership.sh
  - . ./scripts/version.sh
  - eval $(opam env)
  script:
  - scripts/lint.sh --check-ocamlformat
  - dune build --profile=dev @fmt

oc.semgrep:
  image: returntocorp/semgrep-agent:sha-c6cd7cf
  stage: test
  tags:
  - gcp
  rules:
  - when: always
  dependencies: []
  script:
  - echo "OCaml code linting. For information on how to reproduce locally, check out
    scripts/semgrep/README.md"
  - sh ./scripts/semgrep/lint-all-ocaml-sources.sh

oc.integration:compiler-rejections:
  image: ${ci_image_name}/runtime-build-dependencies:${ci_image_tag}
  stage: test
  tags:
  - gcp
  rules:
  - when: always
  needs:
  - oc.docker:ci:amd64
  - oc.build_x86_64-released
  - oc.build_x86_64-exp-dev-extra
  dependencies:
  - oc.docker:ci:amd64
  cache:
    key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - . ./scripts/version.sh
  - eval $(opam env)
  script:
  - dune build @runtest_rejections
  variables:
    CARGO_NET_OFFLINE: "false"

oc.script:test-gen-genesis:
  image: ${ci_image_name}/runtime-build-dependencies:${ci_image_tag}
  stage: test
  tags:
  - gcp
  rules:
  - when: always
  dependencies:
  - oc.docker:ci:amd64
  before_script:
  - eval $(opam env)
  - cd scripts/gen-genesis
  script:
  - dune build gen_genesis.exe

oc.script:snapshot_alpha_and_link:
  image: ${ci_image_name}/runtime-build-dependencies:${ci_image_tag}
  stage: test
  tags:
  - gcp
  rules:
  - when: always
  dependencies:
  - oc.docker:ci:amd64
  cache:
    key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - ./scripts/ci/take_ownership.sh
  - . ./scripts/version.sh
  - eval $(opam env)
  script:
  - ./scripts/ci/script:snapshot_alpha_and_link.sh
  variables:
    CARGO_NET_OFFLINE: "false"

oc.script:test_octez_release_versions:
  image: ${ci_image_name}/runtime-build-dependencies:${ci_image_tag}
  stage: test
  tags:
  - gcp
  rules:
  - when: always
  needs:
  - oc.docker:ci:amd64
  - oc.build_x86_64-released
  - oc.build_x86_64-exp-dev-extra
  dependencies:
  - oc.docker:ci:amd64
  before_script:
  - ./scripts/ci/take_ownership.sh
  - . ./scripts/version.sh
  - eval $(opam env)
  script:
  - ./scripts/test_octez_release_version.sh

oc.script:b58_prefix:
  image: ${ci_image_name}/runtime-build-test-dependencies:${ci_image_tag}
  stage: test
  tags:
  - gcp
  rules:
  - when: always
  dependencies:
  - oc.docker:ci:amd64
  before_script:
  - . ./scripts/version.sh
  - . $HOME/.venv/bin/activate
  script:
  - poetry run pylint scripts/b58_prefix/b58_prefix.py --disable=missing-docstring
    --disable=invalid-name
  - poetry run pytest scripts/b58_prefix/test_b58_prefix.py

oc.test-liquidity-baking-scripts:
  image: ${ci_image_name}/runtime-build-dependencies:${ci_image_tag}
  stage: test
  tags:
  - gcp
  rules:
  - when: on_success
  needs:
  - oc.docker:ci:amd64
  - oc.build_x86_64-released
  - oc.build_x86_64-exp-dev-extra
  dependencies:
  - oc.docker:ci:amd64
  - oc.build_x86_64-released
  - oc.build_x86_64-exp-dev-extra
  before_script:
  - . ./scripts/version.sh
  - eval $(opam env)
  script:
  - ./scripts/ci/test_liquidity_baking_scripts.sh

test_kernels:
  image: ${rust_toolchain_image_name}:${rust_toolchain_image_tag}
  stage: test
  tags:
  - gcp
  rules:
  - when: on_success
  dependencies:
  - oc.docker:rust-toolchain:amd64
  cache:
    key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  script:
  - make -f kernels.mk check
  - make -f kernels.mk test
  variables:
    CC: clang
    NATIVE_TARGET: x86_64-unknown-linux-musl
    CARGO_NET_OFFLINE: "false"

test_etherlink_kernel:
  image: ${rust_toolchain_image_name}:${rust_toolchain_image_tag}
  stage: test
  tags:
  - gcp
  rules:
  - when: on_success
  dependencies:
  - oc.docker:rust-toolchain:amd64
  cache:
    key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  script:
  - make -f etherlink.mk check
  - make -f etherlink.mk test
  variables:
    CC: clang
    NATIVE_TARGET: x86_64-unknown-linux-musl
    CARGO_NET_OFFLINE: "false"

test_etherlink_firehose:
  image: ${rust_toolchain_image_name}:${rust_toolchain_image_tag}
  stage: test
  tags:
  - gcp
  rules:
  - when: on_success
  dependencies:
  - oc.docker:rust-toolchain:amd64
  cache:
    key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  script:
  - make -C etherlink/firehose check
  variables:
    CC: clang
    NATIVE_TARGET: x86_64-unknown-linux-musl
    CARGO_NET_OFFLINE: "false"

check_riscv_kernels:
  image: ${rust_toolchain_image_name}:${rust_toolchain_image_tag}
  stage: build
  tags:
  - gcp
  rules:
  - when: on_success
  dependencies:
  - oc.docker:rust-toolchain:amd64
  cache:
    key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  script:
  - make -C src/riscv check
  variables:
    CC: clang
    NATIVE_TARGET: x86_64-unknown-linux-musl
    CARGO_NET_OFFLINE: "false"

test_riscv_kernels:
  image: ${rust_toolchain_image_name}:${rust_toolchain_image_tag}
  stage: test
  tags:
  - gcp
  rules:
  - when: on_success
  dependencies:
  - oc.docker:rust-toolchain:amd64
  cache:
    key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  script:
  - make -C src/riscv test
  - make -C src/riscv audit
  variables:
    CC: clang
    NATIVE_TARGET: x86_64-unknown-linux-musl
    CARGO_NET_OFFLINE: "false"

test_evm_compatibility:
  image: ${rust_toolchain_image_name}:${rust_toolchain_image_tag}
  stage: test
  tags:
  - gcp
  rules:
  - when: on_success
  dependencies:
  - oc.docker:rust-toolchain:amd64
  cache:
    key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  script:
  - make -f etherlink.mk EVM_EVALUATION_FEATURES=disable-file-logs evm-evaluation-assessor
  - git clone --depth 1 --branch v13 https://github.com/ethereum/tests ethereum_tests
  - ./evm-evaluation-assessor --eth-tests ./ethereum_tests/ --resources ./etherlink/kernel_evm/evm_evaluation/resources/
    -c
  variables:
    CC: clang
    NATIVE_TARGET: x86_64-unknown-linux-musl
    CARGO_NET_OFFLINE: "false"

oc.unit:non-proto-x86_64:
  image: ${ci_image_name}/runtime-build-test-dependencies:${ci_image_tag}
  stage: test
  tags:
  - gcp
  rules:
  - when: on_success
  needs:
  - oc.docker:ci:amd64
  - oc.build_x86_64-released
  - oc.build_x86_64-exp-dev-extra
  dependencies:
  - oc.docker:ci:amd64
  cache:
    key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - . ./scripts/version.sh
  - eval $(opam env)
  script:
  - make $MAKE_TARGETS
  - ./scripts/ci/merge_coverage.sh
  variables:
    ARCH: x86_64
    MAKE_TARGETS: test-nonproto-unit
    CARGO_NET_OFFLINE: "false"
    COVERAGE_OPTIONS: --instrument-with bisect_ppx
    BISECT_FILE: $CI_PROJECT_DIR/_coverage_output/
  artifacts:
    name: coverage-files-$CI_JOB_ID
    expire_in: 1 day
    paths:
    - test_results
    - $BISECT_FILE/$CI_JOB_NAME_SLUG.*
    reports:
      junit: test_results/*.xml
    when: always
  retry: 2

oc.unit:other-x86_64:
  image: ${ci_image_name}/runtime-build-dependencies:${ci_image_tag}
  stage: test
  tags:
  - gcp
  rules:
  - when: on_success
  needs:
  - oc.docker:ci:amd64
  - oc.build_x86_64-released
  - oc.build_x86_64-exp-dev-extra
  dependencies:
  - oc.docker:ci:amd64
  cache:
    key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - . ./scripts/version.sh
  - eval $(opam env)
  script:
  - make $MAKE_TARGETS
  - ./scripts/ci/merge_coverage.sh
  variables:
    ARCH: x86_64
    MAKE_TARGETS: test-other-unit
    CARGO_NET_OFFLINE: "false"
    COVERAGE_OPTIONS: --instrument-with bisect_ppx
    BISECT_FILE: $CI_PROJECT_DIR/_coverage_output/
  artifacts:
    name: coverage-files-$CI_JOB_ID
    expire_in: 1 day
    paths:
    - test_results
    - $BISECT_FILE/$CI_JOB_NAME_SLUG.*
    reports:
      junit: test_results/*.xml
    when: always
  retry: 2

oc.unit:proto-x86_64:
  image: ${ci_image_name}/runtime-build-dependencies:${ci_image_tag}
  stage: test
  tags:
  - gcp
  rules:
  - when: on_success
  needs:
  - oc.docker:ci:amd64
  - oc.build_x86_64-released
  - oc.build_x86_64-exp-dev-extra
  dependencies:
  - oc.docker:ci:amd64
  cache:
    key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - . ./scripts/version.sh
  - eval $(opam env)
  script:
  - make $MAKE_TARGETS
  - ./scripts/ci/merge_coverage.sh
  variables:
    ARCH: x86_64
    MAKE_TARGETS: test-proto-unit
    CARGO_NET_OFFLINE: "false"
    COVERAGE_OPTIONS: --instrument-with bisect_ppx
    BISECT_FILE: $CI_PROJECT_DIR/_coverage_output/
  artifacts:
    name: coverage-files-$CI_JOB_ID
    expire_in: 1 day
    paths:
    - test_results
    - $BISECT_FILE/$CI_JOB_NAME_SLUG.*
    reports:
      junit: test_results/*.xml
    when: always
  retry: 2

oc.unit:non-proto-arm64:
  image: ${ci_image_name}/runtime-build-test-dependencies:${ci_image_tag}
  stage: test
  tags:
  - gcp_arm64
  rules:
  - when: on_success
  needs:
  - oc.docker:ci:arm64
  - oc.build_arm64-released
  - oc.build_arm64-exp-dev-extra
  dependencies:
  - oc.docker:ci:arm64
  cache:
    key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - . ./scripts/version.sh
  - eval $(opam env)
  script:
  - make $MAKE_TARGETS
  variables:
    ARCH: arm64
    MAKE_TARGETS: test-nonproto-unit test-webassembly
    DISTRIBUTE_TESTS_TO_PARALLELS: "true"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    name: $CI_JOB_NAME-$CI_COMMIT_SHA-${ARCH}
    expire_in: 1 day
    paths:
    - test_results
    reports:
      junit: test_results/*.xml
    when: always
  retry: 2
  parallel: 2

oc.unit:webassembly-x86_64:
  image: ${ci_image_name}/runtime-build-test-dependencies:${ci_image_tag}
  stage: test
  tags:
  - gcp
  rules:
  - when: on_success
  needs:
  - oc.docker:ci:amd64
  - oc.build_x86_64-released
  - oc.build_x86_64-exp-dev-extra
  dependencies:
  - oc.docker:ci:amd64
  timeout: 20 minutes
  before_script:
  - . ./scripts/version.sh
  - eval $(opam env)
  script:
  - make test-webassembly

oc.unit:js_components:
  image: ${ci_image_name}/runtime-build-test-dependencies:${ci_image_tag}
  stage: test
  tags:
  - gcp
  rules:
  - when: on_success
  needs:
  - oc.docker:ci:amd64
  - oc.build_x86_64-released
  - oc.build_x86_64-exp-dev-extra
  dependencies:
  - oc.docker:ci:amd64
  before_script:
  - ./scripts/ci/take_ownership.sh
  - . ./scripts/version.sh
  - eval $(opam env)
  - . ./scripts/install_build_deps.js.sh
  script:
  - make test-js
  variables:
    RUNTEZTALIAS: "true"
  retry: 2

oc.unit:protocol_compiles:
  image: ${ci_image_name}/runtime-build-dependencies:${ci_image_tag}
  stage: test
  tags:
  - gcp
  rules:
  - when: on_success
  needs:
  - oc.docker:ci:amd64
  - oc.build_x86_64-released
  - oc.build_x86_64-exp-dev-extra
  dependencies:
  - oc.docker:ci:amd64
  cache:
    key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - . ./scripts/version.sh
  - eval $(opam env)
  script:
  - dune build @runtest_compile_protocol
  variables:
    CARGO_NET_OFFLINE: "false"

de.unit:x86_64:
  image: ${ci_image_name}/runtime-build-test-dependencies:${ci_image_tag}
  stage: test
  tags:
  - gcp
  rules:
  - when: always
  needs:
  - oc.docker:ci:amd64
  - oc.build_x86_64-released
  - oc.build_x86_64-exp-dev-extra
  dependencies:
  - oc.docker:ci:amd64
  before_script:
  - eval $(opam env)
  script:
  - dune runtest data-encoding

de.unit:arm64:
  image: ${ci_image_name}/runtime-build-test-dependencies:${ci_image_tag}
  stage: test
  tags:
  - gcp_arm64
  rules:
  - when: always
  needs:
  - oc.docker:ci:arm64
  - oc.build_arm64-released
  - oc.build_arm64-exp-dev-extra
  dependencies:
  - oc.docker:ci:arm64
  before_script:
  - eval $(opam env)
  script:
  - dune runtest data-encoding

oc.install_bin_ubuntu_focal:
  image: public.ecr.aws/lts/ubuntu:20.04_stable
  stage: test
  tags:
  - gcp
  rules:
  - when: always
  dependencies: []
  script:
  - ./docs/introduction/install-bin-deb.sh ubuntu focal

oc.install_bin_ubuntu_jammy:
  image: public.ecr.aws/lts/ubuntu:22.04_stable
  stage: test
  tags:
  - gcp
  rules:
  - when: always
  dependencies: []
  script:
  - ./docs/introduction/install-bin-deb.sh ubuntu jammy

oc.install_bin_rc_ubuntu_focal:
  image: public.ecr.aws/lts/ubuntu:20.04_stable
  stage: test
  tags:
  - gcp
  rules:
  - when: always
  dependencies: []
  script:
  - ./docs/introduction/install-bin-deb.sh ubuntu focal rc

oc.install_bin_rc_ubuntu_jammy:
  image: public.ecr.aws/lts/ubuntu:22.04_stable
  stage: test
  tags:
  - gcp
  rules:
  - when: always
  dependencies: []
  script:
  - ./docs/introduction/install-bin-deb.sh ubuntu jammy rc

oc.install_bin_debian_bookworm:
  image: debian:bookworm
  stage: test
  tags:
  - gcp
  rules:
  - when: always
  dependencies: []
  script:
  - ./docs/introduction/install-bin-deb.sh debian bookworm

oc.install_bin_rc_debian_bookworm:
  image: debian:bookworm
  stage: test
  tags:
  - gcp
  rules:
  - when: always
  dependencies: []
  script:
  - ./docs/introduction/install-bin-deb.sh debian bookworm rc

oc.install_opam_jammy:
  image: ocaml/opam:ubuntu-22.04
  stage: test
  tags:
  - gcp
  rules:
  - when: always
  dependencies: []
  allow_failure: true
  script:
  - ./docs/introduction/install-opam.sh
  variables:
    OPAMJOBS: "4"

oc.compile_release_sources_bullseye:
  image: ocaml/opam:debian-11
  stage: test
  tags:
  - gcp
  rules:
  - when: always
  dependencies: []
  script:
  - ./docs/introduction/compile-sources.sh tezos/tezos latest-release
  variables:
    CARGO_HOME: /home/opam/.cargo
    CARGO_NET_OFFLINE: "false"

oc.compile_sources_bullseye:
  image: ocaml/opam:debian-11
  stage: test
  tags:
  - gcp
  rules:
  - when: always
  dependencies: []
  script:
  - ./docs/introduction/compile-sources.sh ${CI_MERGE_REQUEST_SOURCE_PROJECT_PATH:-tezos/tezos}
    ${CI_MERGE_REQUEST_SOURCE_BRANCH_NAME:-master}
  variables:
    CARGO_HOME: /home/opam/.cargo
    CARGO_NET_OFFLINE: "false"

oc.compile_sources_mantic:
  image: ocaml/opam:ubuntu-23.10
  stage: test
  tags:
  - gcp
  rules:
  - when: always
  dependencies: []
  script:
  - ./docs/introduction/compile-sources.sh ${CI_MERGE_REQUEST_SOURCE_PROJECT_PATH:-tezos/tezos}
    ${CI_MERGE_REQUEST_SOURCE_BRANCH_NAME:-master}
  variables:
    CARGO_HOME: /home/opam/.cargo
    CARGO_NET_OFFLINE: "false"

tezt:
  image: ${ci_image_name}/runtime-e2etest-dependencies:${ci_image_tag}
  stage: test
  tags:
  - gcp_tezt
  rules:
  - when: on_success
  needs:
  - oc.docker:ci:amd64
  - select_tezts
  - oc.build_x86_64-released
  - oc.build_x86_64-exp-dev-extra
  - oc.build_kernels
  - oc.tezt:fetch-records
  dependencies:
  - oc.docker:ci:amd64
  - select_tezts
  - oc.build_x86_64-released
  - oc.build_x86_64-exp-dev-extra
  - oc.build_kernels
  - oc.tezt:fetch-records
  before_script:
  - . ./scripts/version.sh
  - eval $(opam env)
  script:
  - echo "TESTS=\"${TESTS}\" JUNIT=\"${JUNIT}\" CI_NODE_INDEX=\"${CI_NODE_INDEX}\"
    CI_NODE_TOTAL=\"${CI_NODE_TOTAL}\" TEZT_PARALLEL=\"${TEZT_PARALLEL}\" TEZT_VARIANT=\"${TEZT_VARIANT}\""
  - ./scripts/ci/tezt.sh "${TESTS}" --from-record tezt/records --job ${CI_NODE_INDEX:-1}/${CI_NODE_TOTAL:-1}
    --list-tsv > selected_tezts.tsv
  - ./scripts/ci/exit_code.sh timeout -k 60 1860 ./scripts/ci/tezt.sh "${TESTS}" --color
    --log-buffer-size 5000 --log-file tezt.log --global-timeout 1800 --on-unknown-regression-files
    fail --junit ${JUNIT} --from-record tezt/records --job ${CI_NODE_INDEX:-1}/${CI_NODE_TOTAL:-1}
    --record tezt-results-${CI_NODE_INDEX:-1}${TEZT_VARIANT}.json --job-count ${TEZT_PARALLEL}
    --retry ${TEZT_RETRY}
  - ./scripts/ci/merge_coverage.sh
  variables:
    JUNIT: tezt-junit.xml
    TEZT_VARIANT: ""
    TESTS: /ci_disabled && /memory_3k && /memory_4k && /time_sensitive && /slow &&
      /cloud && /flaky
    TEZT_RETRY: "1"
    TEZT_PARALLEL: "3"
    BISECT_FILE: $CI_PROJECT_DIR/_coverage_output/
  artifacts:
    name: coverage-files-$CI_JOB_ID
    expire_in: 7 days
    paths:
    - selected_tezts.tsv
    - tezt.log
    - tezt-*.log
    - tezt-results-${CI_NODE_INDEX:-1}${TEZT_VARIANT}.json
    - $JUNIT
    - $BISECT_FILE/$CI_JOB_NAME_SLUG.*
    reports:
      junit: $JUNIT
    when: always
  retry: 2
  parallel: 60

tezt-memory-3k:
  image: ${ci_image_name}/runtime-e2etest-dependencies:${ci_image_tag}
  stage: test
  tags:
  - gcp_tezt
  rules:
  - when: on_success
  needs:
  - oc.docker:ci:amd64
  - select_tezts
  - oc.build_x86_64-released
  - oc.build_x86_64-exp-dev-extra
  - oc.build_kernels
  - oc.tezt:fetch-records
  dependencies:
  - oc.docker:ci:amd64
  - select_tezts
  - oc.build_x86_64-released
  - oc.build_x86_64-exp-dev-extra
  - oc.build_kernels
  - oc.tezt:fetch-records
  before_script:
  - . ./scripts/version.sh
  - eval $(opam env)
  script:
  - echo "TESTS=\"${TESTS}\" JUNIT=\"${JUNIT}\" CI_NODE_INDEX=\"${CI_NODE_INDEX}\"
    CI_NODE_TOTAL=\"${CI_NODE_TOTAL}\" TEZT_PARALLEL=\"${TEZT_PARALLEL}\" TEZT_VARIANT=\"${TEZT_VARIANT}\""
  - ./scripts/ci/tezt.sh "${TESTS}" --from-record tezt/records --job ${CI_NODE_INDEX:-1}/${CI_NODE_TOTAL:-1}
    --list-tsv > selected_tezts.tsv
  - ./scripts/ci/exit_code.sh timeout -k 60 1860 ./scripts/ci/tezt.sh "${TESTS}" --color
    --log-buffer-size 5000 --log-file tezt.log --global-timeout 1800 --on-unknown-regression-files
    fail --junit ${JUNIT} --from-record tezt/records --job ${CI_NODE_INDEX:-1}/${CI_NODE_TOTAL:-1}
    --record tezt-results-${CI_NODE_INDEX:-1}${TEZT_VARIANT}.json --job-count ${TEZT_PARALLEL}
    --retry ${TEZT_RETRY}
  - ./scripts/ci/merge_coverage.sh
  variables:
    JUNIT: tezt-junit.xml
    TEZT_VARIANT: -memory_3k
    TESTS: memory_3k && /ci_disabled && /memory_4k && /time_sensitive && /slow &&
      /cloud
    TEZT_RETRY: "1"
    TEZT_PARALLEL: "1"
    BISECT_FILE: $CI_PROJECT_DIR/_coverage_output/
  artifacts:
    name: coverage-files-$CI_JOB_ID
    expire_in: 7 days
    paths:
    - selected_tezts.tsv
    - tezt.log
    - tezt-*.log
    - tezt-results-${CI_NODE_INDEX:-1}${TEZT_VARIANT}.json
    - $JUNIT
    - $BISECT_FILE/$CI_JOB_NAME_SLUG.*
    reports:
      junit: $JUNIT
    when: always
  retry: 2
  parallel: 6

tezt-memory-4k:
  image: ${ci_image_name}/runtime-e2etest-dependencies:${ci_image_tag}
  stage: test
  tags:
  - gcp_tezt
  rules:
  - when: on_success
  needs:
  - oc.docker:ci:amd64
  - select_tezts
  - oc.build_x86_64-released
  - oc.build_x86_64-exp-dev-extra
  - oc.build_kernels
  - oc.tezt:fetch-records
  dependencies:
  - oc.docker:ci:amd64
  - select_tezts
  - oc.build_x86_64-released
  - oc.build_x86_64-exp-dev-extra
  - oc.build_kernels
  - oc.tezt:fetch-records
  before_script:
  - . ./scripts/version.sh
  - eval $(opam env)
  script:
  - echo "TESTS=\"${TESTS}\" JUNIT=\"${JUNIT}\" CI_NODE_INDEX=\"${CI_NODE_INDEX}\"
    CI_NODE_TOTAL=\"${CI_NODE_TOTAL}\" TEZT_PARALLEL=\"${TEZT_PARALLEL}\" TEZT_VARIANT=\"${TEZT_VARIANT}\""
  - ./scripts/ci/tezt.sh "${TESTS}" --from-record tezt/records --job ${CI_NODE_INDEX:-1}/${CI_NODE_TOTAL:-1}
    --list-tsv > selected_tezts.tsv
  - ./scripts/ci/exit_code.sh timeout -k 60 1860 ./scripts/ci/tezt.sh "${TESTS}" --color
    --log-buffer-size 5000 --log-file tezt.log --global-timeout 1800 --on-unknown-regression-files
    fail --junit ${JUNIT} --from-record tezt/records --job ${CI_NODE_INDEX:-1}/${CI_NODE_TOTAL:-1}
    --record tezt-results-${CI_NODE_INDEX:-1}${TEZT_VARIANT}.json --job-count ${TEZT_PARALLEL}
    --retry ${TEZT_RETRY}
  - ./scripts/ci/merge_coverage.sh
  variables:
    JUNIT: tezt-junit.xml
    TEZT_VARIANT: -memory_4k
    TESTS: memory_4k && /ci_disabled && /memory_3k && /time_sensitive && /slow &&
      /cloud
    TEZT_RETRY: "1"
    TEZT_PARALLEL: "1"
    BISECT_FILE: $CI_PROJECT_DIR/_coverage_output/
  artifacts:
    name: coverage-files-$CI_JOB_ID
    expire_in: 7 days
    paths:
    - selected_tezts.tsv
    - tezt.log
    - tezt-*.log
    - tezt-results-${CI_NODE_INDEX:-1}${TEZT_VARIANT}.json
    - $JUNIT
    - $BISECT_FILE/$CI_JOB_NAME_SLUG.*
    reports:
      junit: $JUNIT
    when: always
  retry: 2
  parallel: 4

tezt-time-sensitive:
  image: ${ci_image_name}/runtime-e2etest-dependencies:${ci_image_tag}
  stage: test
  tags:
  - gcp_tezt
  rules:
  - when: on_success
  needs:
  - oc.docker:ci:amd64
  - select_tezts
  - oc.build_x86_64-released
  - oc.build_x86_64-exp-dev-extra
  - oc.build_kernels
  - oc.tezt:fetch-records
  dependencies:
  - oc.docker:ci:amd64
  - select_tezts
  - oc.build_x86_64-released
  - oc.build_x86_64-exp-dev-extra
  - oc.build_kernels
  - oc.tezt:fetch-records
  before_script:
  - . ./scripts/version.sh
  - eval $(opam env)
  script:
  - echo "TESTS=\"${TESTS}\" JUNIT=\"${JUNIT}\" CI_NODE_INDEX=\"${CI_NODE_INDEX}\"
    CI_NODE_TOTAL=\"${CI_NODE_TOTAL}\" TEZT_PARALLEL=\"${TEZT_PARALLEL}\" TEZT_VARIANT=\"${TEZT_VARIANT}\""
  - ./scripts/ci/tezt.sh "${TESTS}" --from-record tezt/records --job ${CI_NODE_INDEX:-1}/${CI_NODE_TOTAL:-1}
    --list-tsv > selected_tezts.tsv
  - ./scripts/ci/exit_code.sh timeout -k 60 1860 ./scripts/ci/tezt.sh "${TESTS}" --color
    --log-buffer-size 5000 --log-file tezt.log --global-timeout 1800 --on-unknown-regression-files
    fail --junit ${JUNIT} --from-record tezt/records --job ${CI_NODE_INDEX:-1}/${CI_NODE_TOTAL:-1}
    --record tezt-results-${CI_NODE_INDEX:-1}${TEZT_VARIANT}.json --job-count ${TEZT_PARALLEL}
    --retry ${TEZT_RETRY}
  - ./scripts/ci/merge_coverage.sh
  variables:
    JUNIT: tezt-junit.xml
    TEZT_VARIANT: -time_sensitive
    TESTS: time_sensitive && /ci_disabled && /memory_3k && /memory_4k && /slow &&
      /cloud
    TEZT_RETRY: "1"
    TEZT_PARALLEL: "1"
    BISECT_FILE: $CI_PROJECT_DIR/_coverage_output/
  artifacts:
    name: coverage-files-$CI_JOB_ID
    expire_in: 7 days
    paths:
    - selected_tezts.tsv
    - tezt.log
    - tezt-*.log
    - tezt-results-${CI_NODE_INDEX:-1}${TEZT_VARIANT}.json
    - $JUNIT
    - $BISECT_FILE/$CI_JOB_NAME_SLUG.*
    reports:
      junit: $JUNIT
    when: always
  retry: 2

tezt-slow:
  image: ${ci_image_name}/runtime-e2etest-dependencies:${ci_image_tag}
  stage: test
  tags:
  - gcp_tezt
  rules:
  - when: on_success
  needs:
  - oc.docker:ci:amd64
  - select_tezts
  - oc.build_x86_64-released
  - oc.build_x86_64-exp-dev-extra
  - oc.build_kernels
  - oc.tezt:fetch-records
  dependencies:
  - oc.docker:ci:amd64
  - select_tezts
  - oc.build_x86_64-released
  - oc.build_x86_64-exp-dev-extra
  - oc.build_kernels
  - oc.tezt:fetch-records
  before_script:
  - . ./scripts/version.sh
  - eval $(opam env)
  script:
  - echo "TESTS=\"${TESTS}\" JUNIT=\"${JUNIT}\" CI_NODE_INDEX=\"${CI_NODE_INDEX}\"
    CI_NODE_TOTAL=\"${CI_NODE_TOTAL}\" TEZT_PARALLEL=\"${TEZT_PARALLEL}\" TEZT_VARIANT=\"${TEZT_VARIANT}\""
  - ./scripts/ci/tezt.sh "${TESTS}" --from-record tezt/records --job ${CI_NODE_INDEX:-1}/${CI_NODE_TOTAL:-1}
    --list-tsv > selected_tezts.tsv
  - ./scripts/ci/exit_code.sh timeout -k 60 1860 ./scripts/ci/tezt.sh "${TESTS}" --color
    --log-buffer-size 5000 --log-file tezt.log --global-timeout 1800 --on-unknown-regression-files
    fail --junit ${JUNIT} --from-record tezt/records --job ${CI_NODE_INDEX:-1}/${CI_NODE_TOTAL:-1}
    --record tezt-results-${CI_NODE_INDEX:-1}${TEZT_VARIANT}.json --job-count ${TEZT_PARALLEL}
    --retry ${TEZT_RETRY}
  variables:
    JUNIT: tezt-junit.xml
    TEZT_VARIANT: -slow
    TESTS: slow && /ci_disabled && /memory_3k && /memory_4k && /time_sensitive &&
      /cloud && not (file = src/proto_019_PtParisA/lib_protocol/test/integration/test_adaptive_issuance_launch.ml)
    TEZT_RETRY: "1"
    TEZT_PARALLEL: "3"
  artifacts:
    expire_in: 7 days
    paths:
    - selected_tezts.tsv
    - tezt.log
    - tezt-*.log
    - tezt-results-${CI_NODE_INDEX:-1}${TEZT_VARIANT}.json
    - $JUNIT
    reports:
      junit: $JUNIT
    when: always
  retry: 2
  parallel: 10

tezt-flaky:
  image: ${ci_image_name}/runtime-e2etest-dependencies:${ci_image_tag}
  stage: test
  tags:
  - gcp_tezt
  rules:
  - when: on_success
  needs:
  - oc.docker:ci:amd64
  - select_tezts
  - oc.build_x86_64-released
  - oc.build_x86_64-exp-dev-extra
  - oc.build_kernels
  - oc.tezt:fetch-records
  dependencies:
  - oc.docker:ci:amd64
  - select_tezts
  - oc.build_x86_64-released
  - oc.build_x86_64-exp-dev-extra
  - oc.build_kernels
  - oc.tezt:fetch-records
  before_script:
  - . ./scripts/version.sh
  - eval $(opam env)
  script:
  - echo "TESTS=\"${TESTS}\" JUNIT=\"${JUNIT}\" CI_NODE_INDEX=\"${CI_NODE_INDEX}\"
    CI_NODE_TOTAL=\"${CI_NODE_TOTAL}\" TEZT_PARALLEL=\"${TEZT_PARALLEL}\" TEZT_VARIANT=\"${TEZT_VARIANT}\""
  - ./scripts/ci/tezt.sh "${TESTS}" --from-record tezt/records --job ${CI_NODE_INDEX:-1}/${CI_NODE_TOTAL:-1}
    --list-tsv > selected_tezts.tsv
  - ./scripts/ci/exit_code.sh timeout -k 60 1860 ./scripts/ci/tezt.sh "${TESTS}" --color
    --log-buffer-size 5000 --log-file tezt.log --global-timeout 1800 --on-unknown-regression-files
    fail --junit ${JUNIT} --from-record tezt/records --job ${CI_NODE_INDEX:-1}/${CI_NODE_TOTAL:-1}
    --record tezt-results-${CI_NODE_INDEX:-1}${TEZT_VARIANT}.json --job-count ${TEZT_PARALLEL}
    --retry ${TEZT_RETRY}
  - ./scripts/ci/merge_coverage.sh
  variables:
    JUNIT: tezt-junit.xml
    TEZT_VARIANT: -flaky
    TESTS: /ci_disabled && /memory_3k && /memory_4k && /time_sensitive && /slow &&
      /cloud && flaky
    TEZT_RETRY: "3"
    TEZT_PARALLEL: "1"
    BISECT_FILE: $CI_PROJECT_DIR/_coverage_output/
  artifacts:
    name: coverage-files-$CI_JOB_ID
    expire_in: 7 days
    paths:
    - selected_tezts.tsv
    - tezt.log
    - tezt-*.log
    - tezt-results-${CI_NODE_INDEX:-1}${TEZT_VARIANT}.json
    - $JUNIT
    - $BISECT_FILE/$CI_JOB_NAME_SLUG.*
    reports:
      junit: $JUNIT
    when: always
  retry: 2

tezt:static-binaries:
  image: ${ci_image_name}/runtime-e2etest-dependencies:${ci_image_tag}
  stage: test
  tags:
  - gcp
  rules:
  - when: on_success
  needs:
  - oc.docker:ci:amd64
  - select_tezts
  - oc.build_x86_64-exp-dev-extra
  - oc.build:static-x86_64-linux-binaries
  - oc.tezt:fetch-records
  dependencies:
  - oc.docker:ci:amd64
  - select_tezts
  - oc.build_x86_64-exp-dev-extra
  - oc.build:static-x86_64-linux-binaries
  - oc.tezt:fetch-records
  before_script:
  - mv octez-binaries/x86_64/octez-* .
  script:
  - echo "TESTS=\"${TESTS}\" JUNIT=\"${JUNIT}\" CI_NODE_INDEX=\"${CI_NODE_INDEX}\"
    CI_NODE_TOTAL=\"${CI_NODE_TOTAL}\" TEZT_PARALLEL=\"${TEZT_PARALLEL}\" TEZT_VARIANT=\"${TEZT_VARIANT}\""
  - ./scripts/ci/tezt.sh "${TESTS}" --from-record tezt/records --job ${CI_NODE_INDEX:-1}/${CI_NODE_TOTAL:-1}
    --list-tsv > selected_tezts.tsv
  - ./scripts/ci/exit_code.sh timeout -k 60 1860 ./scripts/ci/tezt.sh "${TESTS}" --color
    --log-buffer-size 5000 --log-file tezt.log --global-timeout 1800 --on-unknown-regression-files
    fail --junit ${JUNIT} --from-record tezt/records --job ${CI_NODE_INDEX:-1}/${CI_NODE_TOTAL:-1}
    --record tezt-results-${CI_NODE_INDEX:-1}${TEZT_VARIANT}.json --job-count ${TEZT_PARALLEL}
    --retry ${TEZT_RETRY}
  variables:
    JUNIT: tezt-junit.xml
    TEZT_VARIANT: ""
    TESTS: /ci_disabled && /memory_3k && /memory_4k && /time_sensitive && /slow &&
      /cloud && cli && /flaky
    TEZT_RETRY: "1"
    TEZT_PARALLEL: "3"
  artifacts:
    expire_in: 7 days
    paths:
    - selected_tezts.tsv
    - tezt.log
    - tezt-*.log
    - tezt-results-${CI_NODE_INDEX:-1}${TEZT_VARIANT}.json
    - $JUNIT
    reports:
      junit: $JUNIT
    when: always

oc.install_python_focal:
  image: public.ecr.aws/lts/ubuntu:20.04_stable
  stage: doc
  tags:
  - gcp
  rules:
  - when: always
  dependencies: []
  script:
  - ./docs/developer/install-python-debian-ubuntu.sh ${CI_MERGE_REQUEST_SOURCE_PROJECT_PATH:-tezos/tezos}
    ${CI_MERGE_REQUEST_SOURCE_BRANCH_NAME:-master}

oc.install_python_jammy:
  image: public.ecr.aws/lts/ubuntu:22.04_stable
  stage: doc
  tags:
  - gcp
  rules:
  - when: always
  dependencies: []
  script:
  - ./docs/developer/install-python-debian-ubuntu.sh ${CI_MERGE_REQUEST_SOURCE_PROJECT_PATH:-tezos/tezos}
    ${CI_MERGE_REQUEST_SOURCE_BRANCH_NAME:-master}

oc.install_python_bullseye:
  image: debian:bullseye
  stage: doc
  tags:
  - gcp
  rules:
  - when: always
  dependencies: []
  script:
  - ./docs/developer/install-python-debian-ubuntu.sh ${CI_MERGE_REQUEST_SOURCE_PROJECT_PATH:-tezos/tezos}
    ${CI_MERGE_REQUEST_SOURCE_BRANCH_NAME:-master}

documentation:odoc:
  image: ${ci_image_name}/runtime-build-test-dependencies:${ci_image_tag}
  stage: doc
  tags:
  - gcp
  rules:
  - when: always
  dependencies:
  - oc.docker:ci:amd64
  cache:
    key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  script:
  - make -C docs odoc-lite
  variables:
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 hour
    paths:
    - docs/_build/api/odoc/
    - docs/odoc.log
    when: always

documentation:manuals:
  image: ${ci_image_name}/runtime-build-test-dependencies:${ci_image_tag}
  stage: doc
  tags:
  - gcp
  rules:
  - when: always
  dependencies:
  - oc.docker:ci:amd64
  cache:
    key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  script:
  - ./scripts/ci/documentation:manuals.sh
  variables:
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - docs/*/octez-*.html
    - docs/api/octez-*.txt
    - docs/developer/metrics.csv
    - docs/user/node-config.json

documentation:docgen:
  image: ${ci_image_name}/runtime-build-test-dependencies:${ci_image_tag}
  stage: doc
  tags:
  - gcp
  rules:
  - when: always
  dependencies:
  - oc.docker:ci:amd64
  cache:
    key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
  before_script:
  - eval $(opam env)
  script:
  - make -C docs -j docexes-gen
  variables:
    CARGO_NET_OFFLINE: "false"
  artifacts:
    expire_in: 1 week
    paths:
    - docs/alpha/rpc.rst
    - docs/shell/rpc.rst
    - docs/user/default-acl.json
    - docs/api/errors.rst
    - docs/shell/p2p_api.rst

documentation:build_all:
  image: ${ci_image_name}/runtime-build-test-dependencies:${ci_image_tag}
  stage: doc
  tags:
  - gcp
  rules:
  - when: on_success
  needs:
  - oc.docker:ci:amd64
  - documentation:odoc
  - documentation:manuals
  - documentation:docgen
  dependencies:
  - oc.docker:ci:amd64
  - documentation:odoc
  - documentation:manuals
  - documentation:docgen
  before_script:
  - eval $(opam env)
  - . $HOME/.venv/bin/activate
  script:
  - make -C docs -j sphinx
  artifacts:
    expire_in: 1 week
    paths:
    - docs/_build/
    expose_as: Documentation - excluding old protocols

documentation:linkcheck:
  image: ${ci_image_name}/runtime-build-test-dependencies:${ci_image_tag}
  stage: doc
  tags:
  - gcp
  rules:
  - when: on_success
  needs:
  - oc.docker:ci:amd64
  - documentation:manuals
  - documentation:docgen
  - documentation:build_all
  dependencies:
  - oc.docker:ci:amd64
  - documentation:manuals
  - documentation:docgen
  - documentation:build_all
  allow_failure: true
  before_script:
  - . ./scripts/version.sh
  - eval $(opam env)
  - . $HOME/.venv/bin/activate
  script:
  - make -C docs redirectcheck
  - make -C docs linkcheck

trigger:debian_repository:
  stage: manual
  rules:
  - when: always
  needs: []
  trigger:
    include: .gitlab/ci/pipelines/debian_repository.yml
