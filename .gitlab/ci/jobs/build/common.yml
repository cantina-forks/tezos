.oc.build:
  extends:
    - .oc.build_template
    - .rules__octez_changes
  variables:
    ARCH: ""
  script:
    - ./scripts/ci/build_full_unreleased.sh
  artifacts:
    name: "build-$ARCH-$CI_COMMIT_REF_SLUG"
    paths:
      - octez-*
      - src/proto_*/parameters/*.json
      - _build/default/src/lib_protocol_compiler/bin/main_native.exe
      - _build/default/tezt/tests/main.exe
      - _build/default/contrib/octez_injector_server/octez_injector_server.exe
    expire_in: 1 day
    when: on_success

.oc.docker:client-libs-dependencies_template:
  extends:
    - .image_template__docker
    - .docker_auth_template
  stage: build
  variables:
    # These image are not built for external use.
    CI_DOCKER_HUB: "false"
  # Handle docker initialization, if necessary, in
  # './scripts/ci/docker_client_libs_dependencies_build.sh'.
  before_script: []
  script:
    - ./scripts/ci/docker_client_libs_dependencies_build.sh
  artifacts:
    reports:
      dotenv: client_libs_dependencies_image_tag.env

.oc.build_x86_64:
  extends:
    - .oc.build
    # Add coverage instrumentation for the integration tests.
    - .oc.template__coverage_instrumentation
    # These job are the main bottleneck since a lot of tests depend on
    # them.  So we start them even before sanity_ci.
    - .needs__trigger
  variables:
    ARCH: "x86_64"
