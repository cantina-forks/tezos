stages:
  - build
  - docker

fmt:
  stage: build
  image: ocaml/opam:ubuntu-22.04-ocaml-4.14
  script:
    - opam-2.1 install ocamlformat.0.21.0
    - dune build @fmt

build:
  stage: build
  image: ocaml/opam:ubuntu-22.04-ocaml-4.14
  before_script:
    - sudo apt update
  script:
    - OPAMJOBS=`nproc` opam-2.1 install --deps-only -y ./teztale-full.opam
    - dune build
  artifacts:
    name: binaries
    expire_in: 1 week
    paths:
      - archiver/main.exe
      - server/main.exe

server_docker:
  stage: docker
  needs: ["build"]
  image: docker
  tags:
    - devops
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t ${CI_REGISTRY_IMAGE}/server:${CI_COMMIT_REF_SLUG} -f Dockerfile.server .
    - docker push ${CI_REGISTRY_IMAGE}/server:${CI_COMMIT_REF_SLUG}
  rules:
    - if: $CI_REGISTRY_IMAGE && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_REGISTRY_IMAGE && $CI_COMMIT_TAG
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: never
    - if: $CI_REGISTRY_IMAGE
      when: manual
      allow_failure: true

archiver_docker:
  stage: docker
  needs: ["build"]
  image: docker
  tags:
    - devops
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t ${CI_REGISTRY_IMAGE}/archiver:${CI_COMMIT_REF_SLUG} -f Dockerfile.archiver .
    - docker push ${CI_REGISTRY_IMAGE}/archiver:${CI_COMMIT_REF_SLUG}
  rules:
    - if: $CI_REGISTRY_IMAGE && $CI_COMMIT_TAG
    - if: $CI_REGISTRY_IMAGE && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: never
    - if: $CI_REGISTRY_IMAGE
      when: manual
      allow_failure: true
